  config:
    kmls:  # optional KML files that specify geographic regions.  aircraft may be in 0-1 regions per file at any time
      - tests/test1.kml 

  aircraft_lists:
    # optional lists of tail numbers of interest.
    alert_aircraft: [ "N12345" ] 

  rules:
    arbitrary_rulename:
      conditions:
        # when should we trigger this rule?  AND expression -- all conditions must be met.
        enabled: True        # if False, this rule will never match (useful for temporarily disabling rules)
        min_alt: 4000        # feet MSL, must be >= to match
        max_alt: 10000       # feel MSL, must be <= to match
        aircraft_list: alert_aircraft  # match aircraft_list above
        exclude_aircraft_list: alert_aircraft # exclude aircraft_list above
        exclude_aircraft_substrs: ["N10C", "N10D"]  # exclude aircraft matching any of these strings
        regions: [ "23 upwind", "Pattern" ]  # will match if inside any of these KML polygons
        regions: []          # not in any KML-defined region
        transition_regions: [ "from", "to" ] # moved from first region to second
        transition_regions: [ ~, "to" ] # appeared in the second region from nowhere
        changed_regions: True # moved from one region to another
        latlongring: [20, 40.763537, -119.2122323] # nm, lat, long
        proximity: [400, .3] # alt separation in feet, lateral separation in nm
        cooldown: 1          # minutes to wait before matching again for this a/c
        rule_cooldown: 1     # minutes to wait before matching again for this rule
        has_attr: wd         # last report has a json element matching the string
        min_time: 400        # earliest UTC time, in 24h format, but don't use leading 0's
        max_time: 1600       # latest UTC time, in 24h format, but don't use leading 0's
        time_ranges: [ "0000-0130", "1330-2400" ] # match if in any of these time ranges, in 24h format
      actions:
        # what should we do when triggered?  Note only one action per type will fire.
        callback: ground_cb  # call a function as specified by AdsbActions.register_callback()
        expire_callback: expire_cb  # callback for when the flight is being evicted
        print: True          # print info about this aircraft to console
        note: "text flag"    # apply a note to aircraft, for use in later callbacks
        note: ~              # clear note
        track: True          # track execution statistics for this rule, to be printed later
        webhook: ['slack', 'slack_nearby_webhook'] # send a message to a slack channel
        webhook: ['page', 'pager1 pager2'] # send a message to two pagers

# Other notes:
# - Callbacks take one arg (the flight) unless matching on a proximity condition -- in that
#   case they take 2 (the two nearby flights)
# - want an unconditional rule?  use "conditions: []"
# - "None" is not valid in yaml, use ~ instead